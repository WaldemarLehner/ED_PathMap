{"version":3,"sources":["webpack:///./src/index.js","webpack:///./src/configuration/__DATASOURCE__.js","webpack:///./src/webworkers/callBackHandler.js","webpack:///./src/webworkers/initWebWorkers.js","webpack:///./src/webworkers/prepareData/main.js?66b3"],"names":["jQuery","require","__DATA__","document","ready","ajax","url","api","logs","error","success","data","workerCallbacks","canvasWorker","module","exports","cmdr","undefined","friends","skybox","galplane","ui","focusElement","markers","default","window","location","href","split","setPreparedData","console","log","logError","userInterface","MessageEvent","arrayOfCommands","arr","Array","isArray","forEach","el","cmd","validateArray","UI","params","preparationWorker","pathToWebWorkerScript","callback","warn","worker","addEventListener","msg","info","createWorker","canvas","querySelector","Worker","__webpack_require__","p"],"mappings":"+GAEA,IAAMA,EAASC,EAAQ,KACjBC,EAAWD,EAAQ,KAIzBD,EAAOG,UAAUC,MAAM,WACtBJ,EAAO,WACNA,EAAOK,KAAK,CACXC,SAAmC,IAAtBJ,EAASK,IAAIC,KAAwBN,EAAQ,QAAW,qBAAuBA,EAASK,IAAIC,KACzGC,MAAO,WAAQ,KAAM,gFACrBC,QAAS,SAAAC,GACR,IAAMC,EAAkBX,EAAQ,KACNA,EAAQ,KAKGY,aAAa,8BAA8BD,6BCnBpFE,EAAOC,QAAU,CAEhBR,IAAK,CACJS,UAAMC,EACNC,aAASD,EACTT,UAAMS,GAEPE,YAAQF,EACRG,cAAUH,EACVI,GAAI,CACHC,kBAAcL,EACdM,aAASN,GAEVO,QAA4B,oBAAXC,OAA0BA,OAAOC,SAASC,KAAMC,MAAM,KAAK,QAAGX,sBCyChF,SAASY,EAAgBlB,GACxBmB,QAAQC,IAAI,wCAAwCpB,GAGrD,SAASqB,EAASrB,GACjBmB,QAAQrB,MAAM,yCAAyCE,GAGxD,SAASsB,EAActB,GACtBmB,QAAQC,IAAI,sCAAuCpB,GAGpD,SAASoB,EAAIpB,GACZmB,QAAQC,IAAIpB,GAnDbG,EAAOC,QAAU,SAACmB,GACjB,IAAIC,EAAkBD,EAAavB,MAepC,SAAuByB,GACtB,IAAIC,MAAMC,QAAQF,GACjB,KAAM,sEAEPA,EAAIG,QAAQ,SAACC,GACZ,GAAqB,iBAAXA,EAAGC,IACZ,KAAM,0CApBRC,CAAcP,GACdA,EAAgBI,QAAQ,SAACC,GACxB,IAAIC,EAyBU,CACdZ,gBAAkBA,EAClBpB,MAAOuB,EACPW,GAAIV,EACJF,IAAKA,GA7BwBS,EAAGC,KACd,mBAARA,EACTA,EAAID,EAAGI,QAEPd,QAAQrB,MAAM,8BAA+B+B,2BCpBhD1B,EAAOC,QAAU,CAChB8B,kBAKD,SAA2BC,EAAsBC,GAChDA,EAAWjB,QAAQkB,KAEnB,IAAIC,EAAS,IAAIhD,EAAQ,IAAZ,GAUb,OATAgD,EAAOC,iBAAiB,UAAU,SAASC,GAC1CJ,EAASI,KACR,GACFF,EAAOC,iBAAiB,QAAQ,SAASC,GACxCJ,EAAS,CAAC,CACTN,IAAI,QACJG,OAAQO,OAER,GACKF,GAjBPpC,aAoBD,SAAsBP,EAAIyC,GAEzBA,EAAWjB,QAAQsB,KAEnB,IAAIC,EAAepD,EAAQ,KAErBqD,EAASnD,SAASoD,cAAc,iBAItC,OAFeF,EAAaC,EAAQhD,EAAKyC,0BClC1CjC,EAAAC,QAAA,WACA,WAAAyC,OAAoBC,EAAAC,EAAuB","file":"/index.js","sourcesContent":["/* eslint-disable no-console */\r\n//const THREE = require(\"three\");\r\nconst jQuery = require(\"jquery\");\r\nconst __DATA__ = require(\"./configuration/__DATASOURCE__\");\r\n\r\n\r\n//When document is ready\r\njQuery(document).ready(function(){\r\n\tjQuery(() => {\r\n\t\tjQuery.ajax({\r\n\t\t\turl: (typeof __DATA__.api.logs === \"undefined\") ? __DATA__.default + \"src/data/logs.json\" : __DATA__.api.logs,\r\n\t\t\terror: () => { throw \"Failed to get the Travel History from EDSM. Please submit an Issue on Github\"; },\r\n\t\t\tsuccess: data => {\r\n\t\t\t\tconst workerCallbacks = require(\"./webworkers/callBackHandler\");\r\n\t\t\t\tconst workerPreperation = require(\"./webworkers/initWebWorkers\");\r\n\t\t\t\t//UI.updateBigText();\r\n\t\t\t\t//UI.updateSmallText(\"Processing travel history\");\r\n\t\t\t\t//let prepWorker = workerPreperation.preparationWorker(\"webworkers/prepareData.js\",workerCallbacks);\r\n\t\t\t\t//prepWorker.postMessage({json:data,url:window.location.href});\r\n\t\t\t\tlet canvasWorker = workerPreperation.canvasWorker(\"webworkers/canvas.worker.js\",workerCallbacks);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});\r\n\r\n\r\n//const _FrontEnd = require(\"./frontend/main\");\r\n","module.exports = {\r\n//Replace undefined with a URL pointing to the ressource folder / api endpoint to override the default parameter. For example cmdr: \"http://\"\r\n\tapi: {\r\n\t\tcmdr: undefined,\r\n\t\tfriends: undefined,\r\n\t\tlogs: undefined\r\n\t},\r\n\tskybox: undefined,\r\n\tgalplane: undefined,\r\n\tui: {\r\n\t\tfocusElement: undefined,\r\n\t\tmarkers: undefined\r\n\t},\r\n\tdefault: (typeof window !== \"undefined\" )?(window.location.href).split(\"?\")[0]:undefined\r\n};","/* eslint-disable no-console */\r\n//This module handles the callbacks from \r\n\r\n/*\r\n*\tCommand Structure:\r\n*\tcmd: command name. The command to execure\r\n*\tparams: the parameters\r\n*\r\n*/\r\n\r\n/* CMD LIST (cmd | params)\r\n* setPreparedData | MessageEvent\r\n* logError | errObj\r\n* \r\n*/\r\n\r\nmodule.exports = (MessageEvent) => {\r\n\tlet arrayOfCommands = MessageEvent.data;\r\n\tvalidateArray(arrayOfCommands);\r\n\tarrayOfCommands.forEach((el)=>{\r\n\t\tlet cmd = getCommandByString(el.cmd);\r\n\t\tif(typeof cmd === \"function\"){\r\n\t\t\tcmd(el.params);\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Could not find the command.\", el);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n * @param {Array} arr\r\n */\r\nfunction validateArray(arr){\r\n\tif(!Array.isArray(arr)){\r\n\t\tthrow \"This function expects an Array of Objects {cmd: string, param: any}\";\r\n\t}\r\n\tarr.forEach((el)=>{\r\n\t\tif(typeof el.cmd !== \"string\"){\r\n\t\t\tthrow \"The Command needs to be typeof String\";\r\n\t\t} \r\n\t});\r\n\treturn true;\r\n}\r\n\r\nfunction getCommandByString(string){\r\n\tlet commands = {\r\n\t\tsetPreparedData : setPreparedData,\r\n\t\terror: logError,\r\n\t\tUI: userInterface,\r\n\t\tlog: log\r\n\t};\r\n\treturn commands[string];\r\n}\r\n\r\nfunction setPreparedData(data){\r\n\tconsole.log(\"setPreparedDate has been called with:\",data);\r\n}\r\n\r\nfunction logError(data){\r\n\tconsole.error(\"One of the Webworkers sent this Error:\",data);\r\n}\r\n\r\nfunction userInterface(data){\r\n\tconsole.log(\"userInterface has been called with:\", data);\r\n}\r\n\r\nfunction log(data){\r\n\tconsole.log(data);\r\n}","/* eslint-disable no-console */\r\n\r\n\r\n\r\nmodule.exports = {\r\n\tpreparationWorker: preparationWorker,\r\n\tcanvasWorker: canvasWorker\r\n\t\r\n};\r\n\r\nfunction preparationWorker(pathToWebWorkerScript,callback){\r\n\tcallback = console.warn;\r\n\t//let worker = (typeof name === \"string\")? new Worker(pathToWebWorkerScript,{name:name}) :new Worker(pathToWebWorkerScript);\r\n\tlet worker = new require(\"worker-loader!./prepareData/main.js\")();\r\n\tworker.addEventListener(\"message\",function(msg){\r\n\t\tcallback(msg);\r\n\t},false);\r\n\tworker.addEventListener(\"error\",function(msg){\r\n\t\tcallback([{\r\n\t\t\tcmd:\"error\",\r\n\t\t\tparams: msg\r\n\t\t}]);\r\n\t},false);\r\n\treturn worker;\r\n}\r\n\r\nfunction canvasWorker(url,callback){\r\n\t//Override callback for now.\r\n\tcallback = console.info;\r\n\r\n\tlet createWorker = require(\"offscreen-canvas/create-worker.js\");\r\n\r\n\tconst canvas = document.querySelector(\"canvas.canvas\");\r\n\r\n\tconst worker = createWorker(canvas, url, callback);\r\n\r\n\treturn worker;\r\n\r\n}","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"eb5d7696ec1b62e5327d.worker.js\");\n};"],"sourceRoot":""}